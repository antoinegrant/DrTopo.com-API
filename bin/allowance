#!/usr/local/rvm/bin/ruby
if ARGV[0]
  environment = ARGV[0]
else
  raise 'No environment set'
end

require 'bundler'
Bundler.require(:default, environment)
require 'active_record'
require 'logger'

::ActiveRecord::Base.configurations = YAML::load(IO.read('config/database.yml'))
::ActiveRecord::Base.establish_connection(environment)
::ActiveRecord::Base.logger = Logger.new(STDOUT)

services = YAML::load(IO.read('config/services.yml'))[environment]
raise "No services defined for #{environment}" unless services
Firefall.config.characters_host = services['characters_host']

require './lib/item'

# TODO: implement cron wrapper to handle reporting of success/failure, and run time somewhere

max_to_give = 3
items_to_give = [33970, 54003]

num_characters = Firefall::Character.count('')
num_pages = (num_characters / 20.0).ceil
if num_pages > 0
  (1..num_pages).each do |page|
    characters = Firefall::Character.search('', page, 20)
    for character in characters
      for sdb_item_id in items_to_give
        num_owned = Item.where(owner_guid: character.cache_escrow_inventory.inventory_id, item_type: sdb_item_id).size + Item.where(owner_guid: character.cache_inventory.inventory_id, item_type: sdb_item_id).size
        if num_owned < max_to_give
          to_give = max_to_give - num_owned
          to_give.times do |x|
            Item.create(character.cache_escrow_inventory.inventory_id, nil, sdb_item_id, Firefall::DB::StringToAuth('allowance'))
          end
        end
      end
    end    
  end
end
